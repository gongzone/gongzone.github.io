{"version":3,"file":"component---src-templates-series-list-template-tsx-4c9994d3c9ac1e1598d5.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/features/series/components/series-list/series-list.tsx","webpack://my-gatsby-site/./src/templates/series-list-template.tsx"],"sourcesContent":["import { Link, graphql } from 'gatsby';\nimport { Routing } from '@/fixtures/routing';\n\nimport { GatsbyImage, getImage, type ImageDataLike } from 'gatsby-plugin-image';\n\ntype SeriesListProps = {\n  posts: Queries.SeriesListDataFragment['nodes'];\n};\n\nexport const SeriesList = ({ posts }: SeriesListProps) => {\n  return (\n    <ul className=\"my-8\">\n      {posts.map(({ id, frontmatter }, i) => (\n        <li key={id} className=\"mb-16 flex flex-col gap-4 sm:flex-row\">\n          <div className=\"flex flex-col sm:self-center\">\n            <Link className=\"hover-text-amber p-2\" to={Routing.POSTS.toString(frontmatter?.slug)}>\n              <span className=\"text-2xl font-bold\">{i + 1}. </span>\n              <span className=\"text-lg font-bold\">{frontmatter?.title}</span>\n            </Link>\n\n            <span className=\"hidden text-sm text-zinc-400 sm:block\">\n              &bull; {frontmatter?.date} 작성\n            </span>\n          </div>\n\n          <div className=\"mx-auto flex w-[90%] flex-col gap-3\">\n            <Link to={Routing.POSTS.toString(frontmatter?.slug)}>\n              <GatsbyImage\n                className=\"rounded-lg\"\n                image={getImage(frontmatter?.image as ImageDataLike)!}\n                alt={frontmatter?.title as string}\n              />\n            </Link>\n\n            <div className=\"flex flex-col gap-2\">\n              <h3 className=\"relative text-ellipsis break-words line-clamp-2\">\n                {frontmatter?.description}\n              </h3>\n              <span className=\"self-end text-sm sm:hidden\">📅 {frontmatter?.date}</span>\n            </div>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport const query = graphql`\n  fragment SeriesListData on MdxConnection {\n    nodes {\n      id\n      frontmatter {\n        title\n        slug\n        date(formatString: \"YYYY년 MM월 DD일\")\n        description\n        image {\n          childImageSharp {\n            gatsbyImageData(placeholder: TRACED_SVG, width: 517, height: 380)\n          }\n        }\n      }\n    }\n  }\n`;\n","import { graphql, type PageProps, type HeadFC } from 'gatsby';\nimport { Link } from 'gatsby';\nimport { TiArrowBack } from 'react-icons/ti';\n\nimport { Routing } from '@/fixtures/routing';\n\nimport { SEO } from '@/components/seo';\nimport { BaseLayout } from '@/components/@layout/base-layout';\nimport { SeriesList } from '@/features/series/components/series-list';\n\ninterface SeriesListPageContext {\n  limit: number;\n  skip: number;\n  totalPagination: number;\n  postsPerPage: number;\n  currentPage: number;\n  seriesName: string;\n}\n\nconst SeriesListTemplate = ({\n  data,\n  pageContext,\n}: PageProps<Queries.GetPostsBySeriesQuery, SeriesListPageContext>) => {\n  const {\n    allMdx: { totalCount, nodes },\n  } = data;\n\n  const { seriesName } = pageContext;\n\n  return (\n    <BaseLayout className=\"py-10 px-5 xs:px-14 md:max-w-[768px] md:p-20 lg:max-w-[850px]\">\n      <div className=\"\">\n        <div className=\"flex flex-col gap-4\">\n          <Link className=\"group inline-flex items-center gap-3\" to={Routing.SERIES.toString()}>\n            <span className=\"flex h-12 w-12 items-center justify-center rounded-full bg-zinc-700 text-3xl shadow-lg duration-300 group-hover:-translate-x-1.5\">\n              <TiArrowBack />\n            </span>\n            <div className=\"flex flex-col text-sm text-zinc-200\">\n              <span>시리즈 목록으로</span>\n              <span>돌아가기</span>\n            </div>\n          </Link>\n          <div className=\"mx-4 my-6 border-b-[3px] border-b-zinc-400 pb-4\">\n            <div className=\"flex flex-col gap-2\">\n              <h1 className=\"text-2xl font-bold text-emerald-400\">{seriesName}</h1>\n              <span>&bull; {totalCount}개의 포스트</span>\n            </div>\n          </div>\n        </div>\n        <SeriesList posts={nodes} />\n      </div>\n    </BaseLayout>\n  );\n};\n\nexport const query = graphql`\n  query GetPostsBySeries($seriesName: String) {\n    allMdx(\n      filter: { frontmatter: { series: { seriesName: { eq: $seriesName } } } }\n      sort: { fields: frontmatter___series___seriesIndex, order: ASC }\n    ) {\n      totalCount\n      ...SeriesListData\n    }\n  }\n`;\n\nexport default SeriesListTemplate;\n\nexport const Head: HeadFC<Queries.GetPostsBySeriesQuery, SeriesListPageContext> = ({\n  pageContext,\n}) => (\n  <SEO\n    title={`${pageContext.seriesName} | 공존의 발자취`}\n    pathname={Routing.slugifySeries(pageContext.seriesName)}\n  />\n);\n"],"names":["SeriesList","posts","_jsx","className","map","i","id","frontmatter","_jsxs","Link","to","Routing","slug","title","date","GatsbyImage","image","getImage","alt","description","data","pageContext","allMdx","totalCount","nodes","seriesName","BaseLayout","children","TiArrowBack","Head","SEO","pathname"],"sourceRoot":""}